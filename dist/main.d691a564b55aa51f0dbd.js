(()=>{var n={712:(n,e,t)=>{function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}var o=t(426);function a(n){return Math.floor(Math.random()*n)}n.exports=function(){var n=[],e=[],t=[],i=function(n){for(var e,t=0;t<1;){var r=s(),o=c();e=l(n,r,o),p(e)&&t++}return e},c=function(){return["x","y"][a(2)]},s=function(){return[a(9),a(9)]},l=function(n,e,t){var r=[];if(r.push(e),"x"===t)for(var o=1;o<n;o++)r.push([e[0],e[1]+o]);else for(var a=1;a<n;a++)r.push([e[0]+a,e[1]]);return r},u=function(e){var t=n.findIndex((function(n){return n.pos.some((function(n){var t,o,a=(o=2,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a,i,c=[],s=!0,l=!1;try{if(a=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=a.call(t)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(n){l=!0,o=n}finally{try{if(!s&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}(t,o)||function(n,e){if(n){if("string"==typeof n)return r(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=a[0],c=a[1];return i===e[0]&&c===e[1]}))}));return-1!==t?t:-1},d=function(n){return!!(u(n)<0&&function(n){return[[0,1],[0,-1],[-1,0],[1,0],[-1,-1],[1,-1],[-1,1],[1,1]].every((function(e){return u([n[0]+e[0],n[1]+e[1]])<0}))}(n))},A=function(n){return!(n[0]<10&&n[0]>=0&&n[1]<10&&n[1]>=0)},p=function(n){for(var e=0;e<n.length;e++)if(!d(n[e])||A(n[e]))return!1;return!0},f=function(e){if(!p(e))return"cannot place ship";var t=o(e);n.push(t)},m=function(n){for(var r=0;r<e.length;r++){var o=e[r];if(o[0]===n[0]&&o[1]===n[1])return!0}for(var a=0;a<t.length;a++){var i=t[a];if(i[0]===n[0]&&i[1]===n[1])return!0}return!1};return{randomBoardGenerator:function(){for(var n=0,e=[4,3,3,2,2,2,1,1,1,1];n<e.length;n++){var t=i(e[n]);f(t)}},clearBoard:function(){n.length=0},getRandomCoordinates:s,generateShip:l,generateRandomShip:i,placeShip:f,validateLocations:p,receivedAttack:function(r){return m(r)||A(r)?-1:u(r)>=0?(n[u(r)].hit(),t.push(r),"hit"):(e.push(r),"miss")},checkforShip:u,getRandomFirePosition:function(){var n,e;do{n=Math.floor(10*Math.random()),e=Math.floor(10*Math.random())}while(m([n,e]));return[n,e]},ships:n,missedShots:e,damageShips:t}}},340:(n,e,t)=>{var r=t(712);n.exports=function(n){var e=n,t=r();return{board:t,setName:function(n){e=n},getName:function(){return e},fire:function(n){return t.receivedAttack(n)},isGameOver:function(){return t.ships.every((function(n){return n.isSunk()}))}}}},426:n=>{n.exports=function(n){return{pos:n,length:n.length,hits:0,getDirection:function(){return n.length>1?n[0][0]===n[1][0]?"x":"y":"x"},hit:function(){this.isSunk&&(this.hits+=1)},isSunk:function(){return this.hits===this.length}}}},982:(n,e,t)=>{"use strict";t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Bangers&display=swap);"]),i.push([n.id,":root {\n    font-size: 16px;\n    font-family: sans-serif;\n}\n\n* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nbody {\n    background-color: #f3f3f3;\n}\n\nheader {\n    font-family: 'Bangers', sans-serif;\n    text-align: center;\n    font-size: 1.9rem;\n    color: rgb(29, 29, 29);\n    letter-spacing: 0.1em;\n    padding: 1em 0;\n}\n\n.container {\n    color: aqua;\n    display: flex;\n    justify-content: center;\n    gap: 5em;\n}\n\n.ship-count-container {\n    text-align: center;\n    color: black;\n}\n\n.button-container,\n.content {\n    text-align: center;\n}\n\n.button-container {\n    margin-top: -0.5em;\n    margin-bottom: 1.8em;\n}\n\nbutton {\n    padding: 1em 2.5em;\n    margin: 0 0.5em;\n    border: none;\n    font-size: 1em;\n    font-weight: 800;\n    border-radius: 20px;\n    background-color: rgb(186, 216, 240);\n    text-transform: uppercase;\n}\n\nbutton:hover {\n    background-color: rgb(157, 194, 224);\n}\n\n.gameboard {\n    display: grid;\n    margin: 1.5em;\n    grid-template-columns: repeat(10, 2em);\n    grid-template-rows: repeat(10, 2em);\n    border: 2px solid rgb(83, 83, 83);\n    background-color: #f2f8f8;\n}\n\n.cell {\n    border: 1px solid rgb(149, 153, 152);\n    position: relative;\n}\n\n.damaged,\n.missed {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.damaged::after,\n.missed::after {\n    content: '';\n    position: absolute;\n    width: 2vmin;\n    height: 2vmin;\n    border-radius: 100%;\n}\n\n.damaged::after {\n    background-color: red;\n}\n\n.missed::after {\n    background-color: black;\n}\n\n.winner {\n    margin: auto;\n    text-align: center;\n    border-radius: 20px;\n    padding: 2em 3em;\n}\n\n.winner-msg {\n    margin-bottom: 0.5em;\n}\n\n.ship-box {\n    z-index: 2;\n    left: 0;\n    top: 0;\n    border: 2px solid #00f;\n    border-radius: 20px;\n    background: rgba(0,0,255,.07);\n    position: absolute!important;\n    margin: -1px;\n}\n\n.sunk-ship {\n    border: 2px solid rgb(247, 14, 14);\n    background-color: rgba(0,0,255,.07);\n}\n\n.ship-box__placeholder {\n    border: 2px solid #27992b;\n    background: rgb(154, 248, 157);\n}","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,yBAAyB;IACzB,wBAAwB;IACxB,sBAAsB;IACtB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kCAAkC;IAClC,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IACtB,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,QAAQ;AACZ;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,oCAAoC;IACpC,yBAAyB;AAC7B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sCAAsC;IACtC,mCAAmC;IACnC,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,UAAU;IACV,OAAO;IACP,MAAM;IACN,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;AAChB;;AAEA;IACI,kCAAkC;IAClC,mCAAmC;AACvC;;AAEA;IACI,yBAAyB;IACzB,8BAA8B;AAClC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Bangers&display=swap');\n\n:root {\n    font-size: 16px;\n    font-family: sans-serif;\n}\n\n* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nbody {\n    background-color: #f3f3f3;\n}\n\nheader {\n    font-family: 'Bangers', sans-serif;\n    text-align: center;\n    font-size: 1.9rem;\n    color: rgb(29, 29, 29);\n    letter-spacing: 0.1em;\n    padding: 1em 0;\n}\n\n.container {\n    color: aqua;\n    display: flex;\n    justify-content: center;\n    gap: 5em;\n}\n\n.ship-count-container {\n    text-align: center;\n    color: black;\n}\n\n.button-container,\n.content {\n    text-align: center;\n}\n\n.button-container {\n    margin-top: -0.5em;\n    margin-bottom: 1.8em;\n}\n\nbutton {\n    padding: 1em 2.5em;\n    margin: 0 0.5em;\n    border: none;\n    font-size: 1em;\n    font-weight: 800;\n    border-radius: 20px;\n    background-color: rgb(186, 216, 240);\n    text-transform: uppercase;\n}\n\nbutton:hover {\n    background-color: rgb(157, 194, 224);\n}\n\n.gameboard {\n    display: grid;\n    margin: 1.5em;\n    grid-template-columns: repeat(10, 2em);\n    grid-template-rows: repeat(10, 2em);\n    border: 2px solid rgb(83, 83, 83);\n    background-color: #f2f8f8;\n}\n\n.cell {\n    border: 1px solid rgb(149, 153, 152);\n    position: relative;\n}\n\n.damaged,\n.missed {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.damaged::after,\n.missed::after {\n    content: '';\n    position: absolute;\n    width: 2vmin;\n    height: 2vmin;\n    border-radius: 100%;\n}\n\n.damaged::after {\n    background-color: red;\n}\n\n.missed::after {\n    background-color: black;\n}\n\n.winner {\n    margin: auto;\n    text-align: center;\n    border-radius: 20px;\n    padding: 2em 3em;\n}\n\n.winner-msg {\n    margin-bottom: 0.5em;\n}\n\n.ship-box {\n    z-index: 2;\n    left: 0;\n    top: 0;\n    border: 2px solid #00f;\n    border-radius: 20px;\n    background: rgba(0,0,255,.07);\n    position: absolute!important;\n    margin: -1px;\n}\n\n.sunk-ship {\n    border: 2px solid rgb(247, 14, 14);\n    background-color: rgba(0,0,255,.07);\n}\n\n.ship-box__placeholder {\n    border: 2px solid #27992b;\n    background: rgb(154, 248, 157);\n}"],sourceRoot:""}]);const c=i},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],u=a[l]||0,d="".concat(l," ").concat(u);a[l]=u+1;var A=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),l=0;l<a.length;l++){var u=t(a[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=s}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(340),e=t.n(n),r=t(379),o=t.n(r),a=t(795),i=t.n(a),c=t(569),s=t.n(c),l=t(565),u=t.n(l),d=t(216),A=t.n(d),p=t(589),f=t.n(p),m=t(982),g={};g.styleTagTransform=f(),g.setAttributes=u(),g.insert=s().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=A(),o()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;var b=function(n){var e;e="player1"===n?document.querySelector(".friendly-waters"):document.querySelector(".enemy-waters");var t=h();return t.classList.add("".concat(n)),e.insertBefore(t,e.firstChild),e},h=function(){var n=document.createElement("div");n.classList.add("gameboard");for(var e=0;e<10;e++)for(var t=0;t<10;t++){var r=document.createElement("div");r.classList.add("cell"),r.dataset.location="".concat(e,",").concat(t),n.appendChild(r)}return n},v=function(n,e){return"hit"===e?(n.classList.add("damaged"),!0):"miss"===e?(n.classList.add("missed"),!1):void 0},y=function(n){document.querySelectorAll(".".concat(n," .ship-cell")).forEach((function(n){n.classList.remove("ship-cell")}))};function C(n,e){var t=n.getDirection(),r=2,o=2;"x"===t?r=2*n.length:o=2*n.length,e.innerHTML='<div id="'.concat(Math.random().toString(16).slice(2),'" data-length="').concat(n.length,'" data-position="').concat(t,'" class="ship-box" style="width: ').concat(r,"em;height: ").concat(o,'em;"></div>')}var B=function(n,e){n.forEach((function(n){!function(n,e){n.pos.forEach((function(t,r){var o=t.join(","),a=document.querySelector(".".concat(e,' [data-location="').concat(o,'"]'));0===r&&(C(n,a),a.firstChild.setAttribute("draggable",!0)),a.classList.add("ship-cell")}))}(n,e)}))};var I=e()("player1"),x=e()("player2");b(I.getName()),b(x.getName()),document.querySelector(".enemy-waters").style.display="none",document.querySelector("body").style.visibility="visible";var k=function(n){n.board.randomBoardGenerator()};k(I),k(x),function(n){var e=n.board.ships,t=n.getName();B(e,t)}(I);var S=document.querySelector(".player1"),E=document.querySelector(".player2"),L=(document.querySelector(".current-player h1"),function(n,e){var t,r=[];function o(e){if("true"===e.target.getAttribute("draggable")){n.board.ships.length<10&&n.board.placeShip(r[0]),r.pop();var o=e.target.parentElement.dataset.location.split(",").map(Number),a=n.board.checkforShip(o);t=n.board.ships[a],r.push(t.pos),n.board.ships.splice(a,1),e.dataTransfer.setData("text/plain",e.target.id),e.dataTransfer.effectAllowed="move"}}function a(n){n.preventDefault()}function i(e){var r=e.target.dataset.location;if(void 0!==r&&void 0!==t){var o=r.split(",").map(Number),a=n.board.generateShip(t.length,o,t.getDirection());n.board.validateLocations(a)&&e.target.classList.add("ship-box__placeholder")}}function c(n){n.target.classList.remove("ship-box__placeholder")}function s(e){var r=e.target.dataset.location;if(void 0!==r){var o=r.split(",").map(Number),a=n.board.generateShip(t.length,o,t.getDirection());if(n.board.validateLocations(a)){var i=e.dataTransfer.getData("text"),c=document.getElementById(i);""===i?n.board.placeShip(t.pos):(n.board.placeShip(a),e.target.appendChild(c),e.target.classList.remove("ship-box__placeholder"))}}else n.board.placeShip(t.pos)}function l(e){e.target.hasAttributes("draggable")&&(y(n.getName()),B(n.board.ships,n.getName()))}function u(e){if("true"===e.target.getAttribute("draggable")){n.board.ships.length<10&&n.board.placeShip(r[0]);var t=e.target.parentElement.dataset.location.split(",").map(Number),o=n.board.checkforShip(t),a=n.board.ships[o],i="x"===a.getDirection()?"y":"x";n.board.ships.splice(o,1);var c=n.board.generateShip(a.length,t,i);if(n.board.validateLocations(c))return n.board.placeShip(c),y(n.getName()),void B(n.board.ships,n.getName());n.board.placeShip(a.pos)}}function d(){n.board.clearBoard(),document.querySelectorAll(".ship-cell").forEach((function(n){n.innerHTML="",n.classList.remove("ship-cell")})),n.board.randomBoardGenerator();var e=n.board.ships;B(e,n.getName())}return{initialize:function(){e.addEventListener("dragstart",o),document.querySelectorAll(".cell").forEach((function(n){n.addEventListener("dragover",a),n.addEventListener("dragenter",i),n.addEventListener("dragleave",c),n.addEventListener("drop",s)})),e.addEventListener("dragend",l),e.addEventListener("dblclick",u),document.getElementById("randomize").addEventListener("click",d)}}}(I,S));L.initialize(),document.querySelector("#start-game").addEventListener("click",(function(){(function(n,e,t,r){var o=n,a=e;function i(){var n=document.querySelector(".content__text");"player1"===o.getName()?n.innerHTML="YOUR turn":n.innerHTML="COMPUTER's turn"}function c(n,e){var t,r,o,a,i=e.board.checkforShip(n);if(-1!==i){var c=e.board.ships[i];c.isSunk()&&(t=c,r=e.getName(),o=t.pos[0].join(","),C(t,a=document.querySelector(".".concat(r,' [data-location="').concat(o,'"]'))),a.firstChild.classList.add("sunk-ship"),function(n){var e=document.querySelector(".".concat(n,"-ship-count .ship-count")),t=e.textContent;e.textContent=t-1}(e.getName()))}}function s(){var n="player1"===o.getName()?t:r,e="player1"===o.getName()?r:t;n.style.opacity=.5,n.style.pointerEvents="none",e.style.opacity=1,e.style.pointerEvents="initial"}function l(){o=o===n?e:n,a=a===n?e:n,s(),i()}function u(){return!!o.isGameOver()&&(n=a.getName(),e=document.querySelector("dialog"),document.querySelector("dialog .winner-msg").textContent="player1"===n?"YOU WON!!":"YOU LOSE!!",e.showModal(),t.removeEventListener("click",A),r.removeEventListener("click",A),!0);var n,e}function d(){o===e&&(function(n){var e=n.board.getRandomFirePosition(),t=n.fire(e),r=document.querySelector('[data-location="'.concat(e,'"]'));v(r,t)&&c(e,n)}(a),u()||l())}function A(n){n.target.classList.contains("missed")||n.target.classList.contains("damaged")||(function(n,e){var t=n.target.dataset.location;if(void 0!==t){var r=t.split(",").map(Number),o=e.fire(r);v(n.target,o)&&c(r,e)}}(n,a),u()||(l(),setTimeout(d,1e3)))}return{startGame:function(){document.querySelectorAll('[draggable="true"]').forEach((function(n){n.setAttribute("draggable",!1)})),document.querySelector(".button-container").style.display="none",document.querySelector(".enemy-waters").style.display="block",i(),document.querySelectorAll(".ship-count-container").forEach((function(n){return n.style.visibility="visible"})),s(),r.addEventListener("click",A)}}})(I,x,S,E).startGame()})),document.querySelector("#new-game").addEventListener("click",(function(){location.reload(),document.querySelector("dialog").close()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,